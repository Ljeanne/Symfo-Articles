<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'overblog_graphql.mutation_resolver' shared service.

include_once $this->targetDirs[3].'/vendor/overblog/graphql-bundle/src/Resolver/FluentResolverInterface.php';
include_once $this->targetDirs[3].'/vendor/overblog/graphql-bundle/src/Resolver/AbstractResolver.php';
include_once $this->targetDirs[3].'/vendor/overblog/graphql-bundle/src/Resolver/AbstractProxyResolver.php';
include_once $this->targetDirs[3].'/vendor/overblog/graphql-bundle/src/Resolver/MutationResolver.php';

$this->services['overblog_graphql.mutation_resolver'] = $instance = new \Overblog\GraphQLBundle\Resolver\MutationResolver();

$instance->addSolution('App\\Mutation\\ArticleDeleteMutation', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\ArticleDeleteMutation']], [], ['id' => 'App\\Mutation\\ArticleDeleteMutation', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Mutation\\ArticleDeleteMutation::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\ArticleDeleteMutation']], [0 => 'DeleteArticle'], ['id' => 'App\\Mutation\\ArticleDeleteMutation', 'aliases' => [0 => 'DeleteArticle'], 'method' => 'resolve', 'alias' => 'DeleteArticle']);
$instance->addSolution('App\\Mutation\\ArticleMutation', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\ArticleMutation']], [], ['id' => 'App\\Mutation\\ArticleMutation', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Mutation\\ArticleMutation::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\ArticleMutation']], [0 => 'NewArticle'], ['id' => 'App\\Mutation\\ArticleMutation', 'aliases' => [0 => 'NewArticle'], 'method' => 'resolve', 'alias' => 'NewArticle']);
$instance->addSolution('App\\Mutation\\ArticleUpdateMutation', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\ArticleUpdateMutation']], [], ['id' => 'App\\Mutation\\ArticleUpdateMutation', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Mutation\\ArticleUpdateMutation::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\ArticleUpdateMutation']], [0 => 'UpdateArticle'], ['id' => 'App\\Mutation\\ArticleUpdateMutation', 'aliases' => [0 => 'UpdateArticle'], 'method' => 'resolve', 'alias' => 'UpdateArticle']);
$instance->addSolution('App\\Mutation\\AuthorDeleteMutation', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\AuthorDeleteMutation']], [], ['id' => 'App\\Mutation\\AuthorDeleteMutation', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Mutation\\AuthorDeleteMutation::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\AuthorDeleteMutation']], [0 => 'DeleteAuthor'], ['id' => 'App\\Mutation\\AuthorDeleteMutation', 'aliases' => [0 => 'DeleteAuthor'], 'method' => 'resolve', 'alias' => 'DeleteAuthor']);
$instance->addSolution('App\\Mutation\\AuthorMutation', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\AuthorMutation']], [], ['id' => 'App\\Mutation\\AuthorMutation', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Mutation\\AuthorMutation::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\AuthorMutation']], [0 => 'NewAuthor'], ['id' => 'App\\Mutation\\AuthorMutation', 'aliases' => [0 => 'NewAuthor'], 'method' => 'resolve', 'alias' => 'NewAuthor']);
$instance->addSolution('App\\Mutation\\AuthorUpdateMutation', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\AuthorUpdateMutation']], [], ['id' => 'App\\Mutation\\AuthorUpdateMutation', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Mutation\\AuthorUpdateMutation::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\AuthorUpdateMutation']], [0 => 'UpdateAuthor'], ['id' => 'App\\Mutation\\AuthorUpdateMutation', 'aliases' => [0 => 'UpdateAuthor'], 'method' => 'resolve', 'alias' => 'UpdateAuthor']);
$instance->addSolution('App\\Mutation\\CategoryDeleteMutation', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\CategoryDeleteMutation']], [], ['id' => 'App\\Mutation\\CategoryDeleteMutation', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Mutation\\CategoryDeleteMutation::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\CategoryDeleteMutation']], [0 => 'DeleteCategory'], ['id' => 'App\\Mutation\\CategoryDeleteMutation', 'aliases' => [0 => 'DeleteCategory'], 'method' => 'resolve', 'alias' => 'DeleteCategory']);
$instance->addSolution('App\\Mutation\\CategoryMutation', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\CategoryMutation']], [], ['id' => 'App\\Mutation\\CategoryMutation', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Mutation\\CategoryMutation::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\CategoryMutation']], [0 => 'NewCategory'], ['id' => 'App\\Mutation\\CategoryMutation', 'aliases' => [0 => 'NewCategory'], 'method' => 'resolve', 'alias' => 'NewCategory']);
$instance->addSolution('App\\Mutation\\CategoryUpdateMutation', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\CategoryUpdateMutation']], [], ['id' => 'App\\Mutation\\CategoryUpdateMutation', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Mutation\\CategoryUpdateMutation::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\CategoryUpdateMutation']], [0 => 'UpdateCategory'], ['id' => 'App\\Mutation\\CategoryUpdateMutation', 'aliases' => [0 => 'UpdateCategory'], 'method' => 'resolve', 'alias' => 'UpdateCategory']);
$instance->addSolution('App\\Mutation\\CommentDeleteMutation', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\CommentDeleteMutation']], [], ['id' => 'App\\Mutation\\CommentDeleteMutation', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Mutation\\CommentDeleteMutation::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\CommentDeleteMutation']], [0 => 'DeleteComment'], ['id' => 'App\\Mutation\\CommentDeleteMutation', 'aliases' => [0 => 'DeleteComment'], 'method' => 'resolve', 'alias' => 'DeleteComment']);
$instance->addSolution('App\\Mutation\\CommentMutation', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\CommentMutation']], [], ['id' => 'App\\Mutation\\CommentMutation', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Mutation\\CommentMutation::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\CommentMutation']], [0 => 'NewComment'], ['id' => 'App\\Mutation\\CommentMutation', 'aliases' => [0 => 'NewComment'], 'method' => 'resolve', 'alias' => 'NewComment']);
$instance->addSolution('App\\Mutation\\CommentUpdateMutation', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\CommentUpdateMutation']], [], ['id' => 'App\\Mutation\\CommentUpdateMutation', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Mutation\\CommentUpdateMutation::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Mutation\\CommentUpdateMutation']], [0 => 'UpdateComment'], ['id' => 'App\\Mutation\\CommentUpdateMutation', 'aliases' => [0 => 'UpdateComment'], 'method' => 'resolve', 'alias' => 'UpdateComment']);

return $instance;
