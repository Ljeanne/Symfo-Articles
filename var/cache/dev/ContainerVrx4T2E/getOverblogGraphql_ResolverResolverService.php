<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'overblog_graphql.resolver_resolver' shared service.

include_once $this->targetDirs[3].'/vendor/overblog/graphql-bundle/src/Resolver/FluentResolverInterface.php';
include_once $this->targetDirs[3].'/vendor/overblog/graphql-bundle/src/Resolver/AbstractResolver.php';
include_once $this->targetDirs[3].'/vendor/overblog/graphql-bundle/src/Resolver/AbstractProxyResolver.php';
include_once $this->targetDirs[3].'/vendor/overblog/graphql-bundle/src/Resolver/ResolverResolver.php';

$this->services['overblog_graphql.resolver_resolver'] = $instance = new \Overblog\GraphQLBundle\Resolver\ResolverResolver();

$instance->addSolution('App\\Resolver\\ArticleResolver', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\ArticleResolver']], [], ['id' => 'App\\Resolver\\ArticleResolver', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Resolver\\ArticleResolver::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\ArticleResolver']], [0 => 'Article'], ['id' => 'App\\Resolver\\ArticleResolver', 'aliases' => [0 => 'Article'], 'method' => 'resolve', 'alias' => 'Article']);
$instance->addSolution('App\\Resolver\\ArticlesResolver', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\ArticlesResolver']], [], ['id' => 'App\\Resolver\\ArticlesResolver', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Resolver\\ArticlesResolver::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\ArticlesResolver']], [0 => 'Articles'], ['id' => 'App\\Resolver\\ArticlesResolver', 'aliases' => [0 => 'Articles'], 'method' => 'resolve', 'alias' => 'Articles']);
$instance->addSolution('App\\Resolver\\AuthorResolver', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\AuthorResolver']], [], ['id' => 'App\\Resolver\\AuthorResolver', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Resolver\\AuthorResolver::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\AuthorResolver']], [0 => 'Author'], ['id' => 'App\\Resolver\\AuthorResolver', 'aliases' => [0 => 'Author'], 'method' => 'resolve', 'alias' => 'Author']);
$instance->addSolution('App\\Resolver\\AuthorsResolver', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\AuthorsResolver']], [], ['id' => 'App\\Resolver\\AuthorsResolver', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Resolver\\AuthorsResolver::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\AuthorsResolver']], [0 => 'Authors'], ['id' => 'App\\Resolver\\AuthorsResolver', 'aliases' => [0 => 'Authors'], 'method' => 'resolve', 'alias' => 'Authors']);
$instance->addSolution('App\\Resolver\\CategoriesResolver', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\CategoriesResolver']], [], ['id' => 'App\\Resolver\\CategoriesResolver', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Resolver\\CategoriesResolver::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\CategoriesResolver']], [0 => 'Categories'], ['id' => 'App\\Resolver\\CategoriesResolver', 'aliases' => [0 => 'Categories'], 'method' => 'resolve', 'alias' => 'Categories']);
$instance->addSolution('App\\Resolver\\CategoryResolver', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\CategoryResolver']], [], ['id' => 'App\\Resolver\\CategoryResolver', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Resolver\\CategoryResolver::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\CategoryResolver']], [0 => 'Category'], ['id' => 'App\\Resolver\\CategoryResolver', 'aliases' => [0 => 'Category'], 'method' => 'resolve', 'alias' => 'Category']);
$instance->addSolution('App\\Resolver\\CommentResolver', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\CommentResolver']], [], ['id' => 'App\\Resolver\\CommentResolver', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Resolver\\CommentResolver::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\CommentResolver']], [0 => 'Comment'], ['id' => 'App\\Resolver\\CommentResolver', 'aliases' => [0 => 'Comment'], 'method' => 'resolve', 'alias' => 'Comment']);
$instance->addSolution('App\\Resolver\\CommentsResolver', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\CommentsResolver']], [], ['id' => 'App\\Resolver\\CommentsResolver', 'aliases' => [], 'method' => '__invoke']);
$instance->addSolution('App\\Resolver\\CommentsResolver::resolve', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'App\\Resolver\\CommentsResolver']], [0 => 'Comments'], ['id' => 'App\\Resolver\\CommentsResolver', 'aliases' => [0 => 'Comments'], 'method' => 'resolve', 'alias' => 'Comments']);
$instance->addSolution('Overblog\\GraphQLBundle\\GraphQL\\Relay\\Mutation\\MutationFieldResolver', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Mutation\\MutationFieldResolver']], [0 => 'relay_mutation_field'], ['id' => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Mutation\\MutationFieldResolver', 'aliases' => [0 => 'relay_mutation_field'], 'method' => '__invoke']);
$instance->addSolution('Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\NodeFieldResolver', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\NodeFieldResolver']], [0 => 'relay_node_field'], ['id' => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\NodeFieldResolver', 'aliases' => [0 => 'relay_node_field'], 'method' => '__invoke']);
$instance->addSolution('Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\PluralIdentifyingRootFieldResolver', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\PluralIdentifyingRootFieldResolver']], [0 => 'relay_plural_identifying_field'], ['id' => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\PluralIdentifyingRootFieldResolver', 'aliases' => [0 => 'relay_plural_identifying_field'], 'method' => '__invoke']);
$instance->addSolution('Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\GlobalIdFieldResolver', [0 => [0 => $this, 1 => 'get'], 1 => [0 => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\GlobalIdFieldResolver']], [0 => 'relay_globalid_field'], ['id' => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\GlobalIdFieldResolver', 'aliases' => [0 => 'relay_globalid_field'], 'method' => '__invoke']);

return $instance;
